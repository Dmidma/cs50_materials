0.  How many different colors does each format support?
	BMP supports up to 32 bits per pixel, over than 4 billion colors. (same as 24 bit RGB but with an extra 8 bit for Alpha channel.)
	GIF supports up to 8 bits per pixel, 256 colors.
	JPEG supports up to 24 bits per pixel, over than 16 million colors. 
	PNG supports up to 24 bits per pixel, over than 16 million colors. (Also it can supports 32 bits RGBA.)
1.  Which of the formats supports animation?
	GIF supports animations.
2.  What’s the difference between lossy and lossless compression?
	Lossy and lossless compression are terms used to describe whether or not, all original data can be restored after the file is uncompressed.
	With lossless compression, all informations can be completely restored after the file is uncompressed.
	Lossy compression is used when a certain information loss will not be detected by the user.
3.  Which of these formats is lossy-compressed?
	The most common lossy format by far is JPEG.
4.  What happens, technically speaking, when a file is deleted on a FAT file system?
	FAT is the abbreviation for "File Allocation Table", which is a linked list of clusters that corresponds to files.
	So when a file get deleted the operation system modifies the file name's first character in the file's directory entery signaling that it has been deleted. Then, the system moves the file's FAT clusters to the list of free clusters, maintaining the file's data intact.
5.  What can someone like you do to ensure (with high probability) that files you delete cannot be recovered?
	Using the operation system to delete files does not sanitize them. But the easiest way to make sure that a deleted file cannot be recovered is to use "Sanitizers". One can use "AutoClave", or "Wipe", two free tools from many others that will ensure the erasing of data for good.
6.  What’s stdint.h?
	stdint.h file is header file that contains typedefs of different size of integers. For example an int16_t is a 16-bit integer, and an uint32_t is a 32-bit unsigned integer.
	Also, it uses macros to define the minimum and maximum values for each type.
	For example INT8_MIN to INT8_MAX has not the same range as UNINT8_MIN to UNINT8_MAX, even though they both describe a 8-bit integer minimum and maximum values.
7.  What’s the point of using uint8_t, uint32_t, int32_t, and uint16_t in a program?
	The point it to manage the size of variables. You can use unint32_t for every variable you declare but it will be a waste of memory since some variable for instance will only store 8-bit integer. Also, you cannot store in an int8_t variable a 24-bit integer.
8.  How many bytes is a BYTE, a DWORD, a LONG, and a WORD, respectively? (Assume a 32-bit architecture like the CS50 Appliance.)
	BYTE: 1 byte.
	DWORD: 4 bytes.
	LONG: 4 bytes.
	WORD: 2 bytes.
9.  What (in ASCII, decimal, or hexadecimal) must the first two bytes of any BMP file be? (Leading bytes used to identify file formats (with high probability) are generally called "magic numbers.)"
	The first two bytes of a BMP file must be the signature world: 
		ASCII: BM
		Hexa: 0x4D42 ('B' in hexadecimal is 0x42 and 'M' in hexadecimal is 0x4D)
10. What’s the difference between bfSize and biSize?
	The bfSize is specified in the BITMAPFILEHEADER, and it will hold the size, in bytes, of the bitmap file.
	The biSize is specified in the BITMAPINFOHEADER, and it will hold the number of bytes required by the structure.
11. What does it mean if biHeight is negative?
	If the biHeight is positive, the bitmap is a bottom-up DIB and its origin is the lower-left corner.
	If the biHeight is negative, the bitmap is a top-down DIB and its origin is the upper-left corner.
12. What field in BITMAPINFOHEADER specifies the BMP’s color depth (i.e., bits per pixel)?
	The field in BITMAPINFOHEADER that specifies the BMP's color depth is biBitCount.
13. Why might fopen return NULL in copy.c:37?
	The fopen functions returns a FILE pointer. So we must always check if the pointer is NULL because errors can occur. Once you found that the FILE pointer is NULL, you can use ferror() and/or feof() to detect the error that occured.
14. Why is the third argument to fread always 1 in our code?
	In our code we used fread to read BITMAPFILEHEADER, BITMAPINFOHEADER, RGBTRIPLE, and store them in variables.
	The third argument is used to indicate to fread that it must read "one" data element, that have a specified size, which is passed to the function through the second argument (typically with sizeof(one_of_struct)).
15. What value does copy.c:70 assign padding if bi.biWidth is 3?
	int padding =  (4 - (bi.biWidth * sizeof(RGBTRIPLE)) % 4) % 4;
	After switching the variables with values:
	int padding = (4 - (3 * 3) % 4) % 4;
	So the padding variable will be 3. 
16. What does fseek do?
	fseek sets the file, if I am allowed to say, virtual cursor to a certain position.
	In our case it is used to skip over paddings, if any. 
17. What is SEEK_CUR?
	SEEK_CUR is one of three arguments that fseek can take, which they are used to indicate from where fseek should move the position of its cursor.
	SEEK_SET: Beginning of the file.
	SEEK_CUR: Current position of the file cursor.
	SEEK_END: End of the file.
18. Whodunit?
	I am so confused. Was it Rob Bowden or his cat. =D